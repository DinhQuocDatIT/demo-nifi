version: '3.8'

services:
  # ==========================
  # MySQL Database for User Service
  # ==========================
  mysql-user:
    image: mysql:8.0
    container_name: mysql-user
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_service
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    networks:
      - app-network

  # ==========================
  # MySQL Database for Subscription Service
  # ==========================
  mysql-subscription:
    image: mysql:8.0
    container_name: mysql-subscription
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: subscription_service
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - "3308:3306"
    networks:
      - app-network

  # ==========================
  # MySQL Database for Report Service
  # ==========================
  mysql-report:
    image: mysql:8.0
    container_name: mysql-report
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: report_service   
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - "3315:3306"
    networks:
      - app-network
    volumes:
      - mysql-report-data:/var/lib/mysql   

  # ==========================
  # User Service
  # ==========================
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-user:3306/user_service?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SERVER_PORT: 8081
    expose:
      - "8081"
    depends_on:
      - mysql-user
    networks:
      - app-network
    restart: unless-stopped

  # ==========================
  # Subscription Service
  # ==========================
  subscription-service:
    build:
      context: ./subscription-service
      dockerfile: Dockerfile
    container_name: subscription-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-subscription:3306/subscription_service?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SERVER_PORT: 8082
    expose:
      - "8082"
    depends_on:
      - mysql-subscription
    networks:
      - app-network
    restart: unless-stopped

  # ==========================
  # Report Service
  # ==========================
  report-service:
    build:
      context: ./report-service
      dockerfile: Dockerfile
    container_name: report-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-report:3306/report_service?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SERVER_PORT: 8090
    expose:
      - "8090"
    depends_on:
      - mysql-report
    networks:
      - app-network
    restart: unless-stopped

  # ==========================
  # API Gateway
  # ==========================
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      SERVER_PORT: 8080

      # === ROUTES ===
      SPRING_CLOUD_GATEWAY_ROUTES_0_ID: user-service
      SPRING_CLOUD_GATEWAY_ROUTES_0_URI: http://user-service:8081
      SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0: Path=/api/user-service/**

      SPRING_CLOUD_GATEWAY_ROUTES_1_ID: subscription-service
      SPRING_CLOUD_GATEWAY_ROUTES_1_URI: http://subscription-service:8082
      SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0: Path=/api/subscription-service/**

      SPRING_CLOUD_GATEWAY_ROUTES_2_ID: report-service
      SPRING_CLOUD_GATEWAY_ROUTES_2_URI: http://report-service:8090
      SPRING_CLOUD_GATEWAY_ROUTES_2_PREDICATES_0: Path=/api/report-service/**
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - subscription-service
      - report-service   
    networks:
      - app-network
    restart: unless-stopped

  # ==========================
  # Apache NiFi
  # ==========================
  nifi:
    image: apache/nifi:latest
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      - NIFI_WEB_HTTPS_HOST=0.0.0.0
      - NIFI_WEB_HTTPS_PORT=8443
      - NIFI_WEB_HTTP_PORT=
      - NIFI_CLUSTER_IS_NODE=false
    volumes:
      - nifi_flow:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content:/opt/nifi/nifi-current/content_repository
      - nifi_database:/opt/nifi/nifi-current/database_repository
      - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi_state:/opt/nifi/nifi-current/state
      - ./nifi/mysql-connector-j-9.5.0.jar:/opt/nifi/nifi-current/lib/mysql-connector-j-9.5.0.jar
    networks:
      - app-network
    restart: unless-stopped

# ==========================
# Networks & Volumes
# ==========================
networks:
  app-network:
    driver: bridge

volumes:
  mysql-report-data:   
  nifi_flow:
  nifi_content:
  nifi_database:
  nifi_provenance:
  nifi_state:
